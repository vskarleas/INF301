##### Seance TD1 #####
fonction nb_carac(arbre a)
    si a == NULL alors
        retourne 0
    sinon si a.gauche == NULL et a.droit == NULL alors
        retourne 0
    sinon
        retourne 1 + nb_carac(a.gauche) + nb_carac(a.droit)


fonction nb_especes(arbre a)
    si a == NULL alors
        retourne 0
    sinon si a.gauche == NULL et a.droit == NULL alors
        retourne 1
    sinon
        retourne nb_especes(a.gauche) + nb_especes(a.droit)

fonction creer_graph(arbre a, nom_fichier)
    f = ouvrir_fichier(nom_fichier)
    ecrire_fichier(f, "digraph arbre {\n")
    ecrire_arbre(a, f)
    ecrire_fichier(f, "}")
    fermer(f)

fonction ecrire_arbre(arbre a, fichier f)
    si a == NULL alors
        return;
    si a.gauche != NULL alors
        ecrire_fichier(f, a.valeur + "->" + a.gauche.valeur + " [label : non]")
        ecrire_arbre(a.gauche, f)
    si a.droit != NULL alors
        ecrire_fichier(f, a.valeur + "->" + a.droit.valeur + " [label : oui]")
        ecrire_arbre(a.droit, f)

fonction afficher_carac_espece(arbre a, espece e)
    p:pile
    est_animal_trouve = carac_espece(a, p, e)
    si est_animal_trouve alors
        afficher(p)

##### Seance TD2 #####
fonction afficher_par_niveau (arbre racine, FILE *tout)
    index_noeud = 0
    nb_noeud_passes = 0
    nb_noeud_niveau_prochaine = 0
    file = {racine}
    tant que file != VIDE faire
        n <- pop(file)
        index_noeud++
        si index_noeud == nb_noeud_passes + 1
            nb_noeud_passes += nb_noeud_niveau_prochaine
            nb_noeud_niveau_prochaine = 0
            ecrire(\n)
        si (est_carac(n))
            si n.gauche != NULL
                nb_noeud_niveau_prochaine++
                append(file, n.gauche)
            si n.droit != NULL 
                nb_noeud_niveau_prochaine++
                append(file, n.droit)

                
            
    sinon
        afficher("Pas lÃ ")

fonction carac_espece(arbre a, pile p, espece e)
    si a == NULL alors
        retourne faux
    si a.valeur == e
        retourne vrai
    si a.gauche != NULL alors
        si carac_espece(a.gauche, p, e)
            retourne vrai
    si a.droit != NULL alors
        si carac_espece(a.droit, p, e)
            empiler(p, a.valeur)
            retourne vrai
        sinon retourne faux


