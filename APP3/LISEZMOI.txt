Recommandations sur l'utilisation des fichiers pour l'APP3.
A lire absolument !


****************************************************************
**  Pour tout le monde                                        **
****************************************************************

Renseignez ici les noms des membres de votre binôme :

Nom1 - prénom1 : Simon Noan
Nom2 - prénom2 : Trehin Gwendal
Nom3 - prénom3 : Skarleas Vasileios

Si vous avez des commentaires, remarques etc. pour le rendu, vous pouvez les 
mettre ici:

On a ajouté les suivantes fichiers:
- liste.c (liste.h): Fonctions utilisés pour traiter des listes chaines
- file.c (file.h): Fonctions utilisés pour manipuler des files comme en Acte 3B avec le parcours en largeur
- file_a.c (file_a.h): Changement de structure de la file qui accepte un arbre comme valeur au lieu d'un noeud


*************************** Acte 5 *****************************
Pour l'acte 5 on a decidé qu'on utilisera un fichier en format csv pour faire la lecture. C'est pourquoi, on
devrait manipuler la lecture d'un fichier de ce format. Grace à la librairie <curses.h>, on etait capable
d'utiliser le comportment de fgets() pour faciliter la manipulation de la lecture. 

L'idee principal est de cree deux listes. Une qui inclut les caracteristiques et une qui inclut le nombre des oui deux
pour chaque espece dans le fichier. Aussi, on etait focailisé sur la creation d'une liste chaine de liste chaine qui 
inclut les especes de chaque caracteristique.

Quand on a construit ces trois listes, c'est le moment de filtrer les donnes et reconstruire le tableu du corespondance.

Alors on a l'algoritme suivant:
//FIXME: Ajouter le pseudocde de l'algo

Malheursmenent, on n'avait pas le temps de deboger chaque fonction de l'Acte 5 et ainsi le code n'est pas fonctionnel.
Le comportment general serait que en execution de l'acte5, il prendra un fichier csv en argument ainsi que le nombre
des caracteristiques. Apres la construction de l'arbre, il faisait une construction d'un fichier en format .dot pour 
qu'on peut visualiser l'arbre.


Travail à effectuer:
====================

Pour commencer l'acte I, implémenter la recherche du nombre d'espèces et de
caractéristiques d'un arbre, à modifier dans le fichier arbresphylo.{c,py}.

Pour les actes suivants, vous aurez également à modifier le programme
principal (main.{c,py}), ce qui vous permettra de tester par vous même vos
fonctions.

Nous vous fournissons également des programmes automatiques pour tester vos
fonctions.  Pour chacune des fonctions des différents actes, il est important
de respecter la spécification demandée pour pouvoir passer les suites de tests.

Nous vous fournissons des suites de tests pour les actes I, II et III et IV.
La façon de tester dépend du langage de programmation utilisé.

POUR L'ACTE IV: Notez que pour l'acte IV, on considère qu'il n'est pas possible
d'insérer une caractéristique à un arbre vide, ni d'insérer une caractéristique
qui n'est possédée par aucune espèce déjà présente dans l'arbre (pour ce
cas-là, ajout_espece fait l'affaire). Ceci permet d'éviter d'avoir à ajouter
des noeuds caractéristique sans enfant qui seraient confondues avec des
espèces/feuilles.

Par contre, vous êtes responsables de tester et fournir vous même quelques 
tests pour l'acte V pour le rendu.


Tester votre implémentation en C:
=================================

Vous trouverez dans le répertoire tests/ des fichiers vous permettant de
tester par vous-même vos fonctions en exécutant votre programme principal, par 
exemple ainsi :

> ./main tests/arbre-simple.test

Plusieurs programmes de test sont également fournis:
    acte1.c, acte2.c, acte3.c, acte3b.c et acte4.c
Ceux-ci ne doivent **pas** être modifiés.
Ils sont compilés automatiquement avec la commande 'make' et utilisent les 
fonctions déclarées dans les fichiers .h et remplies dans les .c
Ils utilisent pour leurs tests les répertoires tests_acte1, etc. correspondants.


Pour tester l'acte I vous pouvez ainsi :
- soit déclencher l'ensemble des tests :
  > make tests_acte1

- soit lancer manuellement un des tests ainsi (par exemple pendant le debug 
  d'un test en particulier) :
  > ./acte1 tests_acte1/acte1_arbre-simple.test

Les actes II, III-A, III-B et IV se testent de la même manière.
Pour information, le format des fichiers de tests est décrit en fin de ce 
fichier.



Tester votre implémentation en Python:
======================================

Vous trouverez dans le répertoire tests/ des fichiers vous permettant de
tester par vous-même vos fonctions en exécutant votre programme principal, par 
exemple ainsi :

> ./main.py tests/arbre-simple.test

Ou, si vous travailler sous Idle, modifiez les arguments directement au début 
du main.py


Plusieurs programmes sont également fournis :
    acte1.py, acte2.py, acte3.py, acte3b.py et acte4.py
Ceux-ci ne doivent **pas** être modifiés, sauf pour les variables de tests au 
début des fichiers si vous travaillez sous Idle (variables 'do_all_test' et 
'nomfichier').

Ces programmes utilisent les fonctions définies dans arbres.py et arbresphylo.py
Ils utilisent pour leurs tests les répertoires tests_acte1, etc. correspondants.

Pour tester l'acte I vous pouvez ainsi:
- soit déclencher l'ensemble des tests ainsi:
  > ./acte1.py -all

- soit utiliser manuellement un des fichiers de tests ainsi (par exemple 
  pendant le debug d'un test en particulier) :
  > ./acte1.py tests_acte1/acte1_arbre-simple.test

(Ou, si vous n'utilisez pas la ligne de commande, en modifiant les premières lignes de acte1.py)

Les actes II, III-A, III-B et IV se testent de la même manière.
Pour information, le format des fichiers de tests est décrit en fin de ce 
fichier.




Description des formats des fichiers de test
============================================

Format des tests de l'acte I :
------------------------------

Nom du fichier arbre
nombre d'especes
nombre de caracteristiques


Format des tests de l'acte II :
-------------------------------

Nom du fichier arbre
nom de l'espece à chercher
"present" ou "absent" selon que l'espece est presente ou pas
Si espece presente :
le nombre de caractéristiques
Les caractéristiques de l'espèce (sur une seule ligne, séparées par un seul espace)


Format des tests de l'acte III-A :
----------------------------------

Nom du fichier arbre
Nom espèce à ajouter
Nombre de caractéristiques de l'espèce à ajouter
"possible" si l'insertion est légale, impossible sinon
 -- série de tests sur l'arbre après insertion
 Nombre espèces dans l'arbre
 Nombre caractéristiques de l'arbre
 Nombre espèces à tester (peut être moins que le nombre d'espèces total)
 -- Pour chaque espèce
 Nom espèce
 Nombre caractéristiques de l'espèce
 Liste caractéristiques (sur une seule ligne, séparées par un seul espace)


Format des tests de l'acte III-B :
----------------------------------

Nom du fichier arbre
Liste des caractéristiques au niveau 1 (sur une seule ligne, séparées par un seul espace)
Liste des caractéristiques au niveau 2
Liste des caractéristiques au niveau 3
...



Format des tests de l'acte IV :
-------------------------------

Nom du fichier arbre
Nom de la caractéristique à ajouter
Nombre d'espèces possédant ces caractéristiques
Liste des espèces qui possèdent cette caractéristique
"possible" si l'insertion est légale, impossible sinon
 -- série de tests sur l'arbre après insertion
 Nombre espèces dans l'arbre
 Nombre caractéristiques de l'arbre
 Nombre espèces à tester (peut être moins que le nombre d'espèces total)
 -- Pour chaque espèce
 Nom espèce
 Nombre caractéristiques de l'espèce
 Liste caractéristiques (sur une seule ligne, séparées par un seul espace)




